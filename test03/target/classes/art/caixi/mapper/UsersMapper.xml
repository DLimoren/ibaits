<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="art.caixi.mapper.UsersMapper">
    <sql id="allColumns">
        id , username , birthday , sex , address
    </sql>
<!--    // 查询所有用户信息-->
<!--    List<Users> getAll();-->
    <select id="getAll" resultType="users">
        select id , username , birthday , sex , address
        from users
    </select>

<!--    用户主键查用户-->
<!--    Users getById(Integer id);-->
    <select id="getById" parameterType="int" resultType="users">
        select  id , username , birthday , sex , address
        from users
        where id = #{id}
    </select>


<!--    根据用户名模糊查询用户-->
<!--    users getByName(String name)-->
<!--    <select id="getByName" parameterType="string" resultType="users">-->
<!--        select id , userName , birthday , sex , address-->
<!--        from users where userName like '%${userName}%'-->
<!--    </select>-->

    <select id="getByName" parameterType="string" resultType="users">
        select id , username , birthday , sex , address
        from users
        where username like concat('%' , #{username} , '%')
    </select>

<!--    更新用户-->
<!--    void update(Users);-->
    <update id="update" parameterType="users" >
        update users set userName = #{userName} , birthday = #{birthday} ,
                        sex = #{sex} , address = #{address}
        where id = ${id}
    </update>

<!--    增加用户-->
<!--    void insert(Users);-->
    <insert id="insert" parameterType="users" >
        insert into users (userName , birthday , sex , address) values(#{userName} ,#{birthday} , #{sex} , #{address})
    </insert>

<!--    根据主键删除用户-->
<!--    void delete(Integer);-->
    <delete id="delete" parameterType="int" >
        delete from users where id = #{id}
    </delete>

    <update id="updateBySet" parameterType="users">
        update users
        <set>
            <if test="userName != null and userName != ''">
                username = #{userName},
            </if>
            <if test="birthday != null and birthday != ''">
                birthday = #{birthday},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address =  #{address},
            </if>
        </set>
            where id = #{id}
    </update>
<!--    List<Users> getByIds(Integer[] ids);-->
    <select id="getByIds" resultType="users">
        select id , username , sex , address
        from  users
        where id in
            <foreach collection="array" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>

    </select>
    <delete id="deleteByIds">
        delete from users
        where id in
            <foreach collection="array" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
    </delete>

<!--    int insertAll(Users[] users);-->
    <insert id="insertAll" >
        insert into users(username,sex ,address)
        values
            <foreach collection="list" item="u" separator=",">
                (#{u.userName},#{u.sex} ,#{u.address})
            </foreach>
    </insert>
    <select id="getByBirthday" resultType="users">
        select id , username , birthday , sex , address
        from users
        where birthday between #{arg0} and #{arg1}
    </select>
    <select id="getByMap" resultType="users">
        select id , username , birthday , sex , address
        from users
        where birthday between #{birthdayBegin} and #{birthdayEnd}
    </select>
<!--    Map getMap(Integer id);-->
    <select id="getMap" parameterType="int" resultType="map">
        select username name , sex , address  addr ,birthday bir
        from users
        where id = #{id}
    </select>
<!--    List<Map> getMultiMap();-->
    <select id="getMultiMap" resultType="map" >
        select id , username name , address addr , sex , birthday bir
        from users
    </select>
</mapper>